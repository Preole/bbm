BakaBakaMark Syntax Reference
=============================

This document contains BakaBakaMark's syntax reference in full. It's a 
comprehensive guide to the language, providing a simple introduction as 
well as an in-depth walk through.



. toc

Table of Contents
=================

* Prelude

  * #[HTML-Specific Issue]
  * #[A Word on Indentation]

* Main Syntax
  
  * #[Block Level Elements]
  
    * #[Paragraphs]
    * #[Fenced Code Blocks]
    * #[Blockquotes]
    * #[Headers]
    * #[Horizontal Lines]
    * #[Lists]
    
      * #[Bullet List]
      * #[Ordered List]
      * #[Definition List]
      
    * #[Tables]
    * #[Comment Block]
    * #[Block Stopper]
    * #[Aside Blocks]
    * #[Reference Link Anchors]
    * #[Class Label]
    * #[ID Label]
      
  * #[Inline Level Elements]
  
    * #[Text Formatting]
    * #[Hyperlinks & Images]
    
      * #[Images]
      * #[Hyperlinks]
      
  * Others
  
    * #[Backslash Escape]



Prelude 
-------

. HTML-Specific Issue
=== HTML-Specific Issue ===

One should never worry about HTML entity escaping when generating a HTML 
document. BakaBakaMark will automatically take care of the sanitization, 
even if you try to mangle the document using <div>, <script>, <img>,
& &copy;. This allows you to type any characters literally from the 
keyboard.

"""
<p>
You should never worry about HTML entity escaping if you&#x27;re generating a 
HTML document. BakaBakaMark will automatically take care of the sanitization 
for you, even if you try to mangle the document using &lt;div&gt;, 
&lt;script&gt;, &lt;img&gt;, &amp; &amp;copy;.
</p>
"""


. A Word on Indentation
=== A Word on Indentation ===

First, BakaBakaMark is primarily designed for writers who prefer to write 
in monospaced fonts, rather than proportionally spaced fonts. This design 
is to facilitate a document's logical structure, which is largely controlled 
by indentation.

Following that, indentation is syntactically significant in BakaBakaMark.

Next, there is no """\\t""", or horizontal tabs in BakaBakaMark. **One tab 
key-press equates to one space character** for the purpose of determining 
indentation level.

Finally, If you prefer to use the tab key to produce indentation, configure 
your text editor to insert X spaces instead of tab characters on tab key 
press, where X is your preferred indentation unit.



Main Syntax
-----------

This section is a quick overview of everything you need to lookup about 
BakaBakaMark. For each basic element in this language, I will provide a 
short, but comprehensive demonstration for that element.



. Block Level Elements
=== Block Level Elements ===

Block level elements in BakaBakaMark, like block elements in HTML, are 
elements that are displayed as 'blocks'. They're displayed as rectangular 
boxes that are stretched as high and wide as they can be, within reason. 
In general, they serve as containers for other elements in the document, 
such as plain text.

For a quick summary of commonly used elements, please consult the following 
table.

|====
!! Feature
!! Sample Source Code
!! HTML Render
!! HTML Source
|====
!! Paragraph
|| """
   This is a paragraph

   This is another paragraph. Paragraphs ends with a blank line in general.
   """
|| This is a paragraph

   This is another paragraph. Paragraphs ends with a blank line in general.
|| """
   <p>
   This is a paragraph
   </p>
   <p>
   This is another paragraph. Paragraphs ends with a blank line in general.
   </p>
   """
|====
!! Fenced Code Block
|| """
   \"""
   This 
   
     Is
     
   Fenced code block.
   
   
   Spaces    and newlines are preserved.
   \"""
   """
|| """
   This 

     Is

   Fenced code block.


   Spaces    and newlines are preserved.
   """
|| """
   <pre><code>This 

     Is

   Fenced code block.


   Spaces    and newlines are preserved.
   </code></pre>
   """
|====
!! Blockquote
|| """
   > Artillery adds dignity to what would otherwise be a vulgar brawl.

     -- Frederick The Great
   """
|| > Artillery adds dignity to what would otherwise be a vulgar brawl.

     -- Frederick The Great
|| """
   <blockquote>
    <p>
   Artillery adds dignity to what would otherwise be a vulgar brawl.
    </p>
    <p>
   -- Frederick The Great
    </p>
   </blockquote>
   """
|====
!! Header (One-Liner, or ATX-style)
|| """
   ===== **Example One-Liner Header** =====
   """
|| ===== **Example One-Liner Header** =====
|| """
   <h5>
   **Example One-Liner Header**
   </h5>
   """
|====
!! Header (Setext-Style)
|| 
|| 
|| Please refer to the #[Headers]-[Headers]'s SeText section for more 
   details.
|====
!! Horizontal Line
|| """
   ----
   """
|| ----
|| """
   <hr>
   """
|====
!! Bullet List
|| """
   * A
   + B
   - C
   """
|| * A
   + B
   - C
|| """
   <ul>
    <li>
     <p>
   A
     </p>
    </li>
    <li>
     <p>
   B
     </p>
    </li>
    <li>
     <p>
   C
     </p>
    </li>
   </ul>
   """
|====
!! Ordered List
|| """
   1. A
   2. B
   #. C
   3. D
   """
|| 1. A
   2. B
   #. C
   3. D
|| """
   <ol>
    <li>
     <p>
   A
     </p>
    </li>
    <li>
     <p>
   B
     </p>
    </li>
    <li>
     <p>
   C
     </p>
    </li>
    <li>
     <p>
   D
     </p>
    </li>
   </ol>
   """
|====
!! Definition List
|| """
   ; Term
   : Description
   """
|| ; Term
   : Description
|| """
   <dl>
    <dt>
   Term
    </dt>
    <dd>
     <p>
   Description
     </p>
    </dd>
   </dl>
   """
|====
!! Table
|| """
   !! Row 1 Col 1 Header Cell
   || Row 1 Col 2
   |====
   !! Row 2 Col 1 Header Cell
   || Row 2 Col 2
   """
|| !! Row 1 Col 1 Header Cell
   || Row 1 Col 2
   |====
   !! Row 2 Col 1 Header Cell
   || Row 2 Col 2
|| """
   <table>
    <tr>
     <th>
      <p>
   Row 1 Col 1 Header Cell
      </p>
     </th>
     <td>
      <p>
   Row 1 Col 2
      </p>
     </td>
    </tr>
    <tr>
     <th>
      <p>
   Row 2 Col 1 Header Cell
      </p>
     </th>
     <td>
      <p>
   Row 2 Col 2
      </p>
     </td>
    </tr>
   </table>
   """
|====
!! Aside block
|| """
   ****
   Arbitrary block-level container.
   ****
   """
|| ****
   Arbitrary block-level container.
   ****
|| """
   <div>
    <p>
   Arbitrary block-level container.
    </p>
   </div>
   """
|====
!! ID Label (For Cross-Referencing / Internal Links)
|| """
   . Label
   A paragraph to be assigned an ID.
   """
|| ''This section is intentionally left blank.''
|| """
   <p id="bbm-Label">
   A paragraph to be assigned an ID.
   </p>
   """
|====
!! Reference Link Anchor
|| """
   :{SomeID}: http://www.google.com/
   
   ?<SomeID>-[I'm going to visit Google]
   """
|| :{SomeID}: http://www.google.com/
   
   ?<SomeID>-[I'm going to visit Google]
|| """
   <p>
   <a href="http:&#x2F;&#x2F;www.google.com&#x2F;">I'm going to visit Google</a>
   </p>
   """
|====


. Paragraphs
==== Paragraphs ====
 
To generate a paragraph, type away. This is the basic building block of most 
kinds of writing.

To generate multiple paragraphs, put one or more blank lines in between by 
pressing the **Enter** key twice.

Paragraph text need to be lined up against the block's left margin, which 
is determined by the indentation of first visible character that started 
the paragraph block. Specifically:

"""
  This is 
  preferred. 
  Everything is lining up 
  against the left-margin.
  
  This is acceptable, if one wants to ensure spaces are visible within the
   same paragraph, if manual line breaks are not to be interpreted as white
   spaces. Some typesetting tools and markup languages, such as HTML, treat 
   line breaks as white space for automatic word-wrapping by default.
   
  This treatment is okay for English and most languages from the
   Latin and Cyrillic alphabet, but that line break conversion is going to 
   cause problems in other alphabets.
   
  Some languages, such as Chinese, Japanese and Korean (CJK) don't have space
   characters in their alphabet. If writers were to write in such a language,
   and they want to manually line-wrap their text, they're going to see
   unwanted space in their text because of the conversion from line break
   to space.
   
  BakaBakaMark can be configured eliminate that conversion for writers who
   prefer to manually line-wrap in such languages. If one enables that
   configuration and one wishes to deliberately preserve the space in a 
   visible manner, one can write in this style.
   
  Alternatively, one can put the space at the end of every line. This 
  results in invisible syntax, which can be difficult to track down if 
  line breaks are not interpreted as spaces.
   
  This is bad. Insufficient 
 indentation level terminates the ongoing paragraph and 
 starts a new one.
"""

There is no forced line break syntax, invisible or otherwise. Consecutive 
spaces and line breaks shall be collapsed into **one** space in an ordinary 
paragraph.

If line breaks are really necessary, one can use **Fenced Code Block** or 
**PreFormatted Paragraph**. The former ignores all BakaBakaMark syntaxes, 
while the latter works like an ordinary paragraph, except all white spaces 
and new lines are preserved.


. Fenced Code Blocks
==== Fenced Code Blocks ====

Three or more typewriter's double quotes """\"""" on a blank line starts a 
fenced code block. No BakaBakaMark syntax will be parsed inside, and all 
white space as well as invisible line breaks shall be preserved.

To end a fenced code block, use the same number of double quotes on another 
blank line, on the same column as the opening fence.

"""
\"""
This
  Is
Fenced
  Code Block
\"""
"""

Any negatively indented text in the fenced code block shall be treated as 
having no indentation.

Forgetting to close a fenced code block will turn the rest of the document 
into a code block.


. Blockquotes
==== Blockquotes ====

Begin a line with a """>""", or greater than sign, followed by the content just 
like Usenet-style quoting. The blockquote element can contain any other 
block-level element, including nested blockquotes.

> Artillery adds dignity to what would otherwise be a vulgar brawl.

  -- Frederick The Great
  
"""
> Artillery adds dignity to what would otherwise be a vulgar brawl.

  -- Frederick The Great
"""
  
Unlike Usenet-style quoting, only the starting line needs to be prefixed. 
All other lines need to be left without a prefix.

To indicate nesting, as well as blockquotes containing multiple blocks, 
use space-based indentation and make sure the blocks are aligned on the 
same column.

> Joe wrote:

  > I will be coming to see you on Tuesday.
    Please invite your friends.
    We're going to have a lot of fun.

  Who should I invite exactly?
  
"""
> Joe wrote:

  > I will be coming to see you on Tuesday.
    Please invite your friends.
    We're going to have a lot of fun.

  Who should I invite exactly?
"""


. Headers
==== Headers ====

BakaBakaMark supports two kinds of headers: The "One-Liner" and the 
multi-line SeTeXT style header. 

For the One-Liner, begin a line with one or more equal signs """=""", 
followed by one space. This line of text shall be parsed in verbatim.
If you're aesthetically inclined, you can end the one-liner with equal 
signs as well. These equal signs shall not be rendered in the output.

===== **Example One-Liner Header** =====
"""
===== **Example One-Liner Header** =====
"""

If there are equal signs in your title, you may use them so long as these 
equal signs are not at the end of the line. If they happen to need to be at 
the end of the line, you may append an invisible white space after it to 
force it to render.

"""
===== One-Liner = Quick and Easy ===== 
"""

The less equal signs there are, the more important the header is. 

"""
= <h1>
== <h2>
=== <h3>
==== <h4>
===== <h5>
Six or more "=" -> <h6>
"""


The "SeTeXT" style header is done by underlining a paragraph with at least 
one equal sign """=""", or four or more hyphen-minus """-""". The equal 
sign shall yield the most important header <h1>, while the hyphens shall 
yield <h2>. 

"""
This is a Setext Header. Good for 
Long Document Titles and document 
source aesthetics.
===========

This is a Setext Header
---------------
"""


. Horizontal Lines
==== Horizontal Lines ====

To produce a horizontal line or a thematic break, start a line with four 
or more hyphen-minus and end the line immediately after.

---------------

In HTML, this shall render as <hr>.

"""
---------------
"""

. Lists
==== Lists ====

There are three different types of list structures available in BakaBakaMark: 
Bullet Lists, Ordered Lists, and Definition Lists. 



. Bullet List
===== Bullet List =====

Bullet lists are easy; Start a line with any of the characters {"""* + -
"""} or a Unicode bullet symbol, followed by one white space. This creates a 
bullet, and consecutive bullets shall be merged together into a bullet list.

* Item 1
+ Item 2
- Item 3

"""
* Item 1
+ Item 2
- Item 3
"""


Bullet lists can be nested in the same way as blockquotes. Use indentation 
to determine the logical structure.

* Item 1

  Item 1 continued.
  
  * Item 1 Bullet 1
  * Item 1 Bullet 2
  
    > A blockquote.
    
    """
    A code block
      Positive indentation.
    """
    
  * Item 1 Bullet 3.
  
  Item 1 epilogue.
  
* Item 2
* Item 3



"""
* Item 1

  Item 1 continued.
  
  * Item 1 Bullet 1
  * Item 1 Bullet 2
  
    > A blockquote.
    
    """
    A code block
      Positive indentation.
    """
    
  * Item 1 Bullet 3.
  
  Item 1 epilogue.
  
* Item 2
* Item 3
"""

Empty bullet list items are removed from the syntax tree. If such removal 
operations empties the bullet list, the list is removed as well.


. Ordered List
===== Ordered List =====

Ordered List follow the same rule as bullet list, except you start a line 
with an Arabic number, a single period """.""", and a space.

Alternatively, you may also use a number sign """#""" in place of Arabic 
numbers. You may even mix them within the same numbered list.

1. One
2. Two
#. Three
4. Four

"""
1. One
2. Two
#. Three
4. Four
"""


If you need to create two separate lists without rendering explicit content 
between the list, use a single period on a blank line.

1. Item 1
2. Item 2
3. Item 3
.
1. Not 4
2. Not 5
3. Not 6

"""
1. Item 1
2. Item 2
3. Item 3
.
1. Not 4
2. Not 5
3. Not 6
"""

. Definition List
===== Definition List =====

A definition list is one or more pairs of terms and their descriptions.

To specify a term, start a line with a semi-colon """;""" and a space, 
followed by the term to be defined. This term block may not contain a block 
element such as a blockquote. (Though it can contain images, links and other 
formatting.)

To specify a description, use the same syntax as a term, except use a colon 
""":""" instead. The description block may contain other block elements.

Consecutive descriptions and terms will be collapsed into a single 
description group or term, respectively.


; Term 1
; Term 2
; Term 3
: Description 1

  Another paragraph in description 1.
  
: Description 2
: Description 3

"""
; Term 1
; Term 2
; Term 3
: Description 1

  Another paragraph in description 1.
  
: Description 2
: Description 3
"""

; **Term A**
: Description for ''Term A''
; Term B
: Description for Term B
; __Term C__
: Description for __Term C__

"""
; **Term A**
: Description for ''Term A''
; Term B
: Description for Term B
; __Term C__
: Description for __Term C__
"""

Empty terms and descriptions are removed from the definition list. Terms 
at the end of the list, and descriptions at the beginning of the list shall 
be removed. If a definition list becomes empty as a result, it shall be 
removed as well.

: This is not allowed.
; This list shall be removed.

"""
: This is not allowed.
; This list shall be removed.
"""

. Tables
==== Tables ====

BakaBakaMark provides simple table support with two kinds of cells; A header 
cell and an ordinary data cell. They may be nested, and they may contain 
other block elements similar to the rules used by blockquotes and other 
block level elements.

A table cell begins with two pipe symbols """||""", while a header cell uses 
exclaimation mark instead. """!!""". Consecutive table cells or header cells 
are merged into a table row, while a row separator consisting of a pipe and 
at least one equal signs """|===""" denotes a new row start.

!! Row 1 Column 1
!! Row 1 Column 2

   > This cell has a blockquote.
|====
|| Row 2 Column 1
|| Row 2 Column 2

"""
!! Row 1 Column 1
!! Row 1 Column 2

   > This cell has a blockquote.
|====
|| Row 2 Column 1
|| Row 2 Column 2
"""

If you're aesthetically inclined, you may wrap a pair of row separators 
around the table. This does not affect the output in any way.

"""
|====
!! Row 1 Column 1
!! Row 1 Column 2
|====
|| Row 2 Column 1
|| Row 2 Column 2
|====
"""

Here's a short list of table semantics:

- The table's first row determines the number of columns the table shall 
  have on each row.
- Rows with too many columns (cells) shall be trimmed. 
- Empty rows are dropped.
- Rows with at least one cell declared shall be padded with empty cells, 
  up to the table's declared column count.
- Empty table cells are allowed, where as other empty block elements are not.

Cell content alignment and merged table cells are unlikely to be 
implemented, if ever.



-------------

. Comment Block
==== Comment Block ====

Comment blocks are text that gets excluded from the output. They are to 
remain invisible except for the author or the editor, who need to leave 
some notes inside the document without having them rendered at all.

Begin the block by fencing the area off with at least four forward slashes. 
"""////""" End the block in the same way as the beginning fence, with the 
slashes starting on the same column. If this block is to come after a 
paragraph, there needs to be a blank line in between them.

"""
Some paragraph...

////
This shall not be rendered in the output.
////
"""



. Block Stopper
==== Block Stopper ====

This element is useful for stopping an ongoing block element, such as 
splitting a long numbered list into two different lists without producing 
any output. 

Start a line with """.""" and end the line immediately.

"""
.
"""



. Aside Blocks
==== Aside Blocks ====

This element is a block wrapper that can contain other block elements. 
It has no semantic meaning, and no presentational effect.

Begin a line with four or more asterisks, then fill in the block elements 
starting on the next line. End the Aside Block with the same number of 
asterisks on a blank line on the same column as the starting asterisks.

"""
****
This is an Aside
****

-->

<div>
<p>this is an Aside</p>
</div>
"""

This element is meant to be combined with the Label ID and Label Class 
elements, which creates CSS handles for a group of elements that can be used 
to enhance presentation.



. Reference Link Anchors
==== Reference Link Anchors ====

Reference Link Anchors are primarily used to isolate long-winding ugly URL 
from the main text sections using hyperlinks. Instead of specifying the URL, 
one may specify an identifier of a reference link anchor, which will 
substitute the identifier with the URL the anchor is holding.

Start a line with a colon and an opening brace, """:{""", followed by the 
identifier, then close the ID with a closing brace and another colon. """}:"""
The rest of the line is the URL, word for word.

This paragraph contains ?<google>-[A hyperlink to Google].

:{google}: http://www.google.ca/

"""
This paragraph contains ?<google>-[A hyperlink to Google].

:{google}: http://www.google.ca/
"""

The order of the Reference Link Anchor declaration doesn't matter. If 
anchors with identical IDs are declared, the most recently defined anchor 
shall be used.

Additionally, Reference Link Anchors have resolution scopes. An anchor 
declared inside a more deeply nested block element shall be used before 
an anchor with the same name in a less nested block elements.

?<Wikipedia>-[I'm going to the Wikipedia's French section.]

:{Wikipedia}: http://fr.wikipedia.org/

> :{Wikipedia}: http://en.wikipedia.org/

  ?<Wikipedia>-[I'm going to Wikipedia's English section, not the 
  French section.]

"""
?<Wikipedia>-[I'm going to the Wikipedia's French section.]

:{Wikipedia}: http://fr.wikipedia.org/

> :{Wikipedia}: http://en.wikipedia.org/

  ?<Wikipedia>-[I'm going to Wikipedia's English section, not the 
  French section.]
"""



. Class Label
==== Class Label ====

This construct gives the next block-level element a type label. In HTML, 
this allows the element to be selected and modified by CSS for special 
visual effects, such as image blocks with text-wrapping. 

Begin a line with two periods and a white space, followed by the name 
of the class on the rest of the line. White space characters are dropped 
in the final output of the class name. To declare multiple classes for a 
block element, use more class label elements.

"""
.. left
.. red
****
!<Image>-[Alt Text]

Some caption text for a left-floating image with text wrapping and 
caption.
****
"""

Result sample code, which can be utilized by the CSS backend.

"""
<div class="bbm-left bbm-red">
 <p>
 <img src="Image" alt="Alt Text">
 </p>
 <p>
 Some caption text for a left-floating image with text wrapping and 
caption.
 </p>
</div>
"""


. ID Label
==== ID Label ====

Same effect as the Class Label, except that each unique ID can only appear 
once in the entire document, and each block element can only be assigned one 
ID. It's primarily used as an anchor for internal links, which allows 
intra-document navigation.

Begin an ID label like a Class Label, except there's only one period. The 
rest is the same as a Class Label. Here's a live example of an ID label in 
action, along with the Internal Link element.

#[toc]-[Go to the table of content, which is at the top of the page]

"""
. toc

Table of Content
================

[...]

#[toc]-[Table of Content]
"""


Subsequent declaration of the same ID has no effect. If there are multiple 
ID Labels for the same block element, the last declared ID shall be used. 
All previously declared ID are wasted and can no longer be used in later 
parts of the document.

"""
. toc
. toc2 

Table of Content
================

"toc" has no effect and cannot be re-used. Only "toc2" is used on the 
Setext header.
"""

-------------------------------


. Inline Level Elements
=== Inline Level Elements ===

Inline elements are syntactical constructs that occur within lines of text. 
Their primary purpose here is to display hyperlinks, show images, and add 
visual effects and semantics to a block of uneventful text. 


. Text Formatting
==== Text Formatting ====

The following table details the text formatting elements available in 
BakaBakaMark.

|====
!! Effect Desired
!! Sample Source Code
!! Render
!! HTML
|====
!! Italic (Emphasis)
|| """''Two typewriter's single quotes.''"""
|| ''Two typewriter's single quotes.''
|| """<em>"""
|====
!! Bold (Strong Emphasis)
|| """**Two asterisks.**"""
|| **Two asterisks.**
|| """<strong>"""
|====
!! Bold & Italic
|| """''**Use both Bold & Italic**''"""
|| ''**Use both Bold & Italic**''
|| """<em><strong></strong></em>"""
|====
!! Strike-through
|| """{--Strike-through--}"""
|| {--Strike-through--}
|| """<del>"""
|====
!! Text Insertion (Semantic)
|| """{++Update September 25^^th^^: [...]++}"""
|| {++Update September 25^^th^^: [...]++}
|| """<ins>"""
|====
!! Superscript
|| """September 20^^th^^"""
|| September 20^^th^^.
|| """<sup>"""
|====
!! Subscript
|| """O,,2,,"""
|| O,,2,,
|| """<sub>"""
|====
!! Underline
|| """The book __Frank & Beans__ [...]"""
|| The book __Frank & Beans__ [...]
|| """<u>"""
|====
!! Code Snippet (Literal Text)
|| """\"""void **ptr;""\""""
|| """void **ptr;"""
|| """<code>"""
|====

There are a few simple rules to remember, which applies to images and 
hyperlinks as well.

- Proper Tag Nesting

  Make sure the opening and closing formatting tags are properly nested. 
  That is, it's wrong to have two different text formatting tags cross into 
  each others' boundaries.
  
  """
  **This section is bold, ''**but this section is not Italic, because 
  the bold section closed off the start of the Italic section.''
  """
  
  **This section is bold, ''**but this section is not Italic, because 
  the bold section closed off the start of the Italic section.''
  
  BakaBakaMark will resolve the conflict using left-association; That is, 
  the first declared formatting will be applied first, while the rest of 
  improperly nested elements shall be rendered literally.
  
- Close Off Tags.

  Remember to close the formatting tags. Failing to close the tag causes 
  the tag itself to remain in the paragraph literally, though it will have 
  no adverse effect to the rest of the paragraph.
  
  **Oops. Forgot to close the bold text. ''Fortunately, Italics still work.''
  
  The only exception is the **Code Snippet** """\"\"\"""" which will render 
  the rest of the paragraph literally, even if they are properly nested.
  
  """Oops. Forgot to close the code snippet. This means ''even properly 
  formatted Italics will cease to work.''
  
- Text formatting can cross lines, but not paragraphs.

  **This is not bold.
  
  This is not bold**
  
- Matching Quote Counts for Code Snippets

  Code Snippets can only be closed using the same number of double quote 
  characters. (At least three) This enables """nested code snippets without 
  relying on """"\\"""", or backslash escapes""", which makes the source 
  code really ugly.


. Hyperlinks & Images
==== Hyperlinks & Images Quick Summary ====

|====
!! Link Type
!! Sample Source Code
!! HTML Render
!! HTML Source
!! Notes
|====
!! Hyperlinked Image (No Alt Text)
|| """
   ?<about:blank>-[!<noImg.jpg>]
   """
|| ?<about:blank>-[!<noImg.jpg>]
|| """
   <a href="about:blank"><img src="noImg.jpg" alt="Figure"></a>
   """
|| A placeholder alt text shall be generated for such images. (So that 
   links containing non-existing images are still accessible.)
|====
!! External Link (No Custom Display Text)
|| """
   ?<about:blank>
   """
|| ?<about:blank>
|| """
   <a href="about:blank">about:blank</a>
   """
|| The display text shall be set to the destination URL by default.
|====
!! External Link
|| """
   ?<about:blank>-[**Bold** Custom display text.]
   """
|| ?<about:blank>-[**Bold** Custom display text.]
|| """
   <a href="about:blank"><strong>Bold</strong> Custom display text.</a>
   """
|| Standard web link syntax. Permits absolute URL as well as relative URL. 
   Does not perform any guessing on the URL's protocol, if the protocol 
   declaration (such as """http://""")is omitted in the URL string.
   
   Preserves all white space characters.
|====
!! Image
|| """
   !<Image.jpg>-[Specify Alt Text Here]
   """
|| !<Image.jpg>-[Specify Alt Text Here]
|| """
   <img src="Image.jpg" alt="Specify Alt Text Here">
   """
|| Significant white space are preserved, but **all** control characters, 
   including line breaks, are stripped within the alt text attribute.
|====
!! Internal Link (Within the document)
|| """
   #[toc]-[Go to Table of Content]
   """
|| #[toc]-[Go to Table of Content]
|| """
   <a href="#bbm-toc">Go to Table of Content</a>
   """
|| This link syntax is primarily used to navigate within the same document, 
   with anchor points defined by the **ID Label** Element.
|====
!! Wiki Link
|| """
   #<about:blank>-[Custom Display Text]
   """
|| #<about:blank>-[Custom Display Text]
|| """
   <a href="about:blank" class="bbm-wiki">Custom Display Text</a>
   """
|| By default, has the same effect as an external link. This link can be 
   targetted by CSS/Javascript selectors, which allows platform-specific 
   behaviors unique to a particular website, such as a short-hand wiki 
   link that points to a page within the same site.
|====


. Images
==== Images ====

To create an image, start with an exclaimation mark, followed by a """<""" 
or opening angle bracket. Place the URL inside the angle brackets, and end 
the URL with a closing angle bracket """>""". You may span the URL across 
multiple lines, so long as there's no blank lines in between them. 

"""
!<http://www.somesite.com/
some/path/to/image-file.jpg>
"""

Line break characters, trailing and leading space are automatically stripped 
from the output. Significant white space are preserved.

If you want to specify an alt text, use a pair of square bracket, with the 
opening square bracket preceded by a hyphen. Put the alt text inside the 
square brackets. 

You may use square brackets in the alt text so long as opening and closing 
square brackets are balanced. (This rule also applies to display texts in 
**Hyperlinks** and the URL for **Internal Link**.)

"""
!<http://www.somesite.com/some/path/to/image-file.jpg>-[Alt Text [...] Rest 
omitted.]
"""

You may start the square brackets on a different line if you want a cleaner 
looking source document, as long as the hyphen is right before the opening 
square bracket, and there's no visible character between the hyperlink and 
the closing angle bracket.

"""
!<http://[... Some very long URL]>
-[This alt text is on a new line.]
"""


. Hyperlinks
==== Hyperlinks ====

Hyperlinks are created in largely the same manner as images with a few 
variations.

"""?<>""" denotes standard **External Links** pointing to other URLs. The 
question mark denotes a mysterious location in the Internet.

?<http://www.google.com>

"""
<p>
<a href="http:&#x2F;&#x2F;www.google.com">http:&#x2F;&#x2F;www.google.com</a>
</p>
"""

"""#<>""" denotes **Extensible External Links**, which may have special 
effects depending on the hosting backend. By default, they have the same 
behavior as an external link.

"""#[]""" denotes **Internal Link**, which jumps to a different location 
within the same document. This is most useful for large document that 
spans multiple pages.

By default, the link's display text is the URL of the hyperlinks. They can 
be changed in the same way as image alt text: Add a hyphen-minus before 
the pair of square brackets around the display text.

?<http://www.google.com>-[This hyperlink plus __[...]__ omitted content 
points to {--Yahoo--} {++Google.com++}]

#[toc]-[This Internal Link goes to the Table of Content.]

"""
?<http://www.google.com>-[This hyperlink plus __[...]__ omitted content 
points to {--Yahoo--} {++Google.com++}]

#[toc]-[This Internal Link goes to the Table of Content.]
"""

Unlike the Image Alt Text, inline formatting are permitted inside the 
square brackets, so long as it's not a hyperlink element. (Hyperlinks 
will be treated literally if they're encountered.) 

?<http://www.google.com>-[No __nested__ ?<http://www.google.com> allowed.]

To create clickable hyperlinked image**(s)**, put the images inside the 
square brackets of the hyperlink.

"""
?<URL>
-[
!<Image1>
!<Image2>
!<Image3>
]
"""

In both images and hyperlinks, empty URL values are not permitted. Link 
elements with such URL values shall be rendered literally.



=== Others ===

Anything else not covered by the main syntax.


. Backslash Escape
==== Backslash Escape ====

If you need a syntactically significant character to be presented literally, 
add a backslash """\\""" before that character.

\*\*This sentence is not bold.\*\*

The backslash character will always be dropped from the output, so if you 
need to type a backslash character itself, use two backslashes: """\\\\""".

This syntax works for any and all context, including verbatim text sections 
such as Code Blocks and URL. If these sections of text contain backslash 
characters, they'll need to be escaped by doubling the backslashes. The 
source code:

"""
[^\\\\s|\\\\s$]
"""

And the rendered output:

"""
[^\\s|\\s$]
"""

